Memoization 방법을 적용한 알고리즘
메모이제이션(memoization)은 컴퓨터 프로그램을 실행할 때 
이전에 계산한 값을 메모리에 저장해서 매번 다시 계산하지 않도록 하여 전체적인 실행속도를 빠르게 하는 기술이다. 
동적 계획법의 핵심이 되는 기술이다.

memo를 위한 배열을 할당하고, 모두 0으로 초기화 한다;
memo[0]을 0으로 memo[1]는 1로 초기화 한다;

def fibo1(n) :
    global memo
    if n >= 2 and len(memo) <= n :
        memo.append(fibo1(n-1) + fibo1(n-2))
    return memo[n]
memo = [0, 1]
fibo1(10)
print( "메모이제이션", memo )

-------------------------------------------
동적 계획 (Dynamic Programming) 알고리즘은 
그리디 알고리즘과 같이 최적화 문제를 해결하는 알고리즘이다. 

동적 계획 알고리즘은 먼저 입력 크기가 작은 부분 문제들을 모두 해결한 후에 
그 해들을 이용하여 보다 큰 크기의 부분 문제들을 해결하여, 
최종적으로 원래 주어진 입력의 문제를 해결하는 알고리즘이다. 

피보나치 수 DP 적용 알고리즘
def fibo2(n):
    f = [0, 1]
    for i in range(2, n + 1):
        f.append(f[i - 1] + f[i - 2])
    # return f[n]
    return f
print( "DP", fibo2(10) )


